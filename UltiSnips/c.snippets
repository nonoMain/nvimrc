priority 1
extends text

snippet #base "basic defines" b
#ifndef BASE_DEFINES

#define ZERO 0x0

#define MIN_LOWER_ASCII 97  // 'a'
#define MIN_UPPER_ASCII 65  // 'A'
#define MAX_LOWER_ASCII 122 // 'z'
#define MAX_UPPER_ASCII 90  // 'Z'

#ifndef NULL
#define NULL ((void*)ZERO)
#endif /* NULL */

typedef char BYTE;
#ifndef __cplusplus
typedef BYTE bool;
#define FALSE ZERO
#define TRUE !FALSE
#endif

#endif /* BASE_DEFINES */
endsnippet

snippet #ifndef "#ifndef ... #define ... #endif" b
#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
#define ${1:SYMBOL}
#endif /* ${1/([A-Za-z0-9_]+).*/$1/} */
endsnippet

snippet #if "#if #endif" b
#if ${1:0}
$0
#endif
endsnippet

snippet main "main() (main)" b
int main(${1:int argc, char *argv[]})
{
	$0
	return 0;
}
endsnippet

snippet if "if"
if (${1:/* condition */})
{
	$0
}
endsnippet

snippet else "else"
else
{
	$0
}
endsnippet

snippet elif "else if .. (eli)"
else if (${1:/* condition */})
{
	$0
}
endsnippet

snippet ifelse "if .. else" b
if (${1:/* condition */})
{
	$2
}
else
{
	$0
}
endsnippet

snippet ifelif "if .. elif" b
if (${1:/* condition */})
{
	$2
}
else if (${3:/* condition */})
{
	$0
}
endsnippet

snippet ifelifelse "if .. elif" b
if (${1:/* condition */})
{
	$2
}
else if (${3:/* condition */})
{
	$4
}
else
{
	$0
}
endsnippet

snippet switch "switch"
switch ($1)
{
	case $2:
		$0
		break;
}
endsnippet

snippet case "case"
case $1:
	$0
	break;
endsnippet

snippet struct "struct"
typedef struct ${1:`!v expand("%:t:r") .. "_t"`}
{
	${0:/* data */}
} $1;
endsnippet

snippet func "function" b
${1:void} ${2:function_name}($3)
{
	$0
}
endsnippet

snippet fund "function declaration" b
/*
${4:does stuff}
input: ${5:$3}
output: ${6:$1}
*/
${1:void} ${2:function_name}(${3:void});
endsnippet

snippet print "fprintf"
printf("$1"$0);
endsnippet

snippet println "fprintf"
printf("$1\n"$0);
endsnippet

snippet for "for loop (for)"
for (${1:int i = 0}; ${2:i} < ${3:10}; ${4:i++})
{
	$0
}
endsnippet

snippet while "while loop" b
while (${1:/* condition */})
{
	$0
}
endsnippet

snippet dowhile "do .. while loop" b
do
{
	$0
} while (${1:/* condition */});
endsnippet
